version: 2.1

orbs:
  slack: circleci/slack@4.1

jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Build front-end
          command: |
            # Your code here
            cd frontend
            npm install
            npm run build
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build

  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Back-end build
          command: |
            # Your code here
            cd backend
            npm install
            npm run build
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build

  test-frontend:
    docker:
     - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Run frontend test
          command: |
            cd frontend
            npm install
            npm run test
      - restore_cache:
          paths: [frontend/node_modules]
          key: frontend-build

  test-backend:
    docker:
      - image: circleci/node:13.8.0
    # Docker image here
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Run backend test
          command: |
            cd backend
            npm install
            npm run test
      - restore_cache:
          paths:  [backend/node_modules]
          key: backend-build

  scan-frontend:
    docker:
      - image:  circleci/node:13.8.0
    # Docker image here
    steps:
      - checkout
      # Restore from cache
      - restore_cache:
          keys: [frontend-build]
    # Your job code here
      - run:
          name: Scan frontend test
          command: |
            cd frontend
            npm install
            npm audit fix --force
            npm audit --audit-level=critical --force
            npm audit --audit-level=critical
      - restore_cache:
          paths: [frontend/node_modules]
          key: frontend-build

  scan-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys:  [backend-Build]
      - run:
          name: Scan backend test
          command: |
            cd backend
            npm install
            npm audit fix --force
            npm audit fix --force
            npm audit --audit-level=critical
      - restore_cache:
          paths: [backend/node_modules]
          key: backend-build

  deploy:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - run: echo "deploy my app"
      - slack/notify:
          event: fail
          mentions: '@EngineeringTeam'
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: success_tagged_deploy_1
  test:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - run: echo "test my app"





workflows:
  test-and-deploy:
    jobs:
      - test
      - slack/on-hold:
          context: slack-secrets
          filters:
            tags:
              only: /^v.*/
          requires:
            - test
      - pause_workflow:
          filters:
            tags:
              only: /^v.*/
          requires:
            - test
            - slack/on-hold
          type: approval
      - deploy:
          filters:
            tags:
              only: /^v.*/
          requires:
            - pause_workflow
  default:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires: [build-frontend]
      - test-backend:
          requires: [build-backend]
      - scan-backend:
          requires: [build-backend]
      - scan-frontend:
          requires: [build-frontend]